name: avahi
summary: avahi-daemon
description: |
  avahi service daemon

  Avahi is a free, LGPL implementation of DNS Service Discovery (DNS-SD RFC 6763) over Multicast DNS (mDNS RFC 6762),
  commonly known as and compatible with Apple Bonjour primarily targetting Linux.

  Copyright 2004-2015 by the Avahi developers.

base: core20
confinement: strict
grade: stable
adopt-info: avahi

environment:
  PATH: $SNAP/usr/bin:$PATH
  LD_LIBRARY_PATH: $SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}:$SNAP/usr/lib

architectures:
    - build-on: armhf
    - build-on: arm64
    - build-on: amd64

# expose services folder for other snaps
slots:
  services-content:
    interface: content
    content: avahi-services
    write:
      - $SNAP_COMMON/etc/avahi/services

apps:
    daemon:
        command: usr/sbin/avahi-daemon -f $SNAP_COMMON/etc/avahi/avahi-daemon.conf --no-drop-root --debug
        daemon: simple
        adapter: none
        environment:
          PATH: $SNAP/usr/sbin:$SNAP/usr/bin:$SNAP/sbin:$SNAP/bin:$PATH
          LD_LIBRARY_PATH: $SNAP_LIBRARY_PATH:$LD_LIBRARY_PATH:$SNAP/lib:$SNAP/usr/lib:$SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}
        plugs:
          - network
          - network-bind
          - network-control
        slots:
          - avahi-observe
          - avahi-control

    browse:
        command: usr/bin/avahi-browse
        adapter: none
        environment:
          PATH: $SNAP/usr/sbin:$SNAP/usr/bin:$SNAP/sbin:$SNAP/bin:$PATH
          LD_LIBRARY_PATH: $SNAP_LIBRARY_PATH:$LD_LIBRARY_PATH:$SNAP/lib:$SNAP/usr/lib:$SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}
        plugs:
          - network

    publish:
        command: usr/bin/avahi-publish
        adapter: none
        environment:
          PATH: $SNAP/usr/sbin:$SNAP/usr/bin:$SNAP/sbin:$SNAP/bin:$PATH
          LD_LIBRARY_PATH: $SNAP_LIBRARY_PATH:$LD_LIBRARY_PATH:$SNAP/lib:$SNAP/usr/lib:$SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}
        plugs:
          - network

    resolve:
        command: usr/bin/avahi-resolve
        adapter: none
        environment:
          PATH: $SNAP/usr/sbin:$SNAP/usr/bin:$SNAP/sbin:$SNAP/bin:$PATH
          LD_LIBRARY_PATH: $SNAP_LIBRARY_PATH:$LD_LIBRARY_PATH:$SNAP/lib:$SNAP/usr/lib:$SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}
        plugs:
          - network

    set-host-name:
        command: usr/bin/avahi-set-host-name
        adapter: none
        environment:
          PATH: $SNAP/usr/sbin:$SNAP/usr/bin:$SNAP/sbin:$SNAP/bin:$PATH
          LD_LIBRARY_PATH: $SNAP_LIBRARY_PATH:$LD_LIBRARY_PATH:$SNAP/lib:$SNAP/usr/lib:$SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}
        plugs:
          - network

    help:
        command: bin/avahi-help
        adapter: none

parts:
    avahi:
        plugin: autotools
        source: https://github.com/lathiat/avahi.git
        autotools-configure-parameters:
          - --prefix=/usr
          - --disable-qt3
          - --disable-qt4
          - --disable-qt5
          - --disable-gtk
          - --disable-gtk3
          - --disable-gdbm
          - --disable-python
          - --disable-pygtk
          - --disable-python-dbus
          - --disable-mono
          - --disable-monodoc
          - --disable-manpages
          - --disable-xmltoman
          - --with-avahi-user=root
          - --with-avahi-group=root
          - --with-distro=debian
          - --disable-gobject
          - --sysconfdir=/var/snap/${SNAPCRAFT_PROJECT_NAME}/common/etc
          - --localstatedir=/var
        stage-packages:
          - libdaemon0
          - libevent-2.1-7
        override-pull: |
            snapcraftctl pull
            # decide if to build master or release(tag)
            last_released_tag="$(snap info avahi | awk '$1 == "latest/beta:" { print $2 }')"
            last_commited_tag=$(git describe --abbrev=0 --tags)
            # If the latest tag from the upstream project has not been released to
            # beta, build that tag instead of master.
            if [ "${last_commited_tag}" != "${last_released_tag}" ]; then
                git checkout ${last_commited_tag}
                snapcraftctl set-version $( echo ${last_commited_tag} | cut -c 2- )
            else
                snapcraftctl set-version $(git describe --tags | cut -c 2-)
            fi
            # apply additional patches if needed
            if ls ${SNAPCRAFT_PROJECT_DIR}/00*-*.patch 1> /dev/null 2>&1; then
                git apply ${SNAPCRAFT_PROJECT_DIR}/00*-*.patch
            fi
        override-build: |
            snapcraftctl build
            # add tag with txt record os=snappy
            sed -i '/<\/service>/ i\    <txt-record>os=snappy</txt-record>' $SNAPCRAFT_PART_INSTALL/var/snap/${SNAPCRAFT_PROJECT_NAME}/common/etc/avahi/services/ssh.service
        organize:
          var/snap/${SNAPCRAFT_PROJECT_NAME}/common/etc: etc
        stage:
          - -var/snap

    # snap helper scripts
    glue:
        source: glue
        plugin: dump
        stage-packages:
          - jq
          - libjq1

build-packages:
    - gettext
    - intltool
    - libexpat1-dev
    - libdaemon-dev
    - libglib2.0-dev
    - xmltoman
    - libdbus-1-dev
    - libevent-dev
